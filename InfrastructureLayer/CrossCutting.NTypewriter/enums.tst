#reference "~\ReferencedAssemblies\CrossCutting.Typewriter.dll" 
${
    // Enable extension methods by adding using Typewriter.Extensions.*
    using Typewriter.Extensions.Types; 
    using CrossCutting.Typewriter;

    // Uncomment the constructor to change template settings.
    Template(Settings settings)
    { 
        settings.IncludeProject("Business.Enums");
        settings.IncludeProject("Data.TransferObjects");
        settings.IncludeProject("Business.Entities");
        settings.OutputFilenameFactory = (file) =>
        {
           // Extract correct type name depending on its type (class, enum, interface, ...)
           string typeName = file.CreateDirectoriesFromTypeName();
        
           return "..\\..\\..\\FE\\ALDA-UI\\src\\app\\models" + typeName + "\\" + file.Name.Replace(".cs", ".ts"); 
        };

    }

}//The do not modify block below is intended for the outputted typescript files... 
//*************************DO NOT MODIFY**************************
//
//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST
//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION
//
//*************************DO NOT MODIFY**************************

$Enums(e => !e.Attributes.Any(a => a.Name.Equals("ExcludeFromTemplating")))[$DocComment[
    /**
    * $Summary
    */]
    export enum $Name {
        $Values[
        $DocComment[
        /**
        * $Summary
        */]
        $Name = "$Name"][,]
    }]
